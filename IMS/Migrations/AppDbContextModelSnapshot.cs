// <auto-generated />
using System;
using Data.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColocationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4578),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4578),
                            IsDeleted = false,
                            Name = "A",
                            RowCount = 8
                        },
                        new
                        {
                            Id = 2,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4586),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4587),
                            IsDeleted = false,
                            Name = "B",
                            RowCount = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAllocate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateStop")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExpectedSize")
                        .HasColumnType("integer");

                    b.Property<string>("InspectorNote")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("ServerId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServerId");

                    b.ToTable("Colocations");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6392),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6403),
                            Description = "Doanh nghiệp tư nhân",
                            IsDeleted = false,
                            Name = "Doanh nghiệp tư nhân"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6462),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6463),
                            Description = "Công ty trách nhiệm hữu hạn một thành viên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn một thành viên"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6474),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6475),
                            Description = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6485),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6486),
                            Description = "Công ty cổ phần",
                            IsDeleted = false,
                            Name = "Công ty cổ phần"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6496),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6496),
                            Description = "Công ty hợp danh",
                            IsDeleted = false,
                            Name = "Công ty hợp danh"
                        });
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BasePower")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfPort")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePower = 200,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4510),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4516),
                            IsDeleted = false,
                            NumberOfPort = 3,
                            Size = 2,
                            Status = 0,
                            Type = "Mock"
                        });
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoveout")
                        .HasColumnType("boolean");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.Property<int>("StartPosition")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RackId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5752),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5752),
                            DeviceId = 1,
                            IsDeleted = false,
                            IsMoveout = false,
                            RackId = 1,
                            StartPosition = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<double>("CurrentPower")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaxPower")
                        .HasColumnType("double precision");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Racks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 200.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4601),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4602),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4611),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4612),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4618),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4618),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4627),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4627),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 33,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4632),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4633),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 41,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4644),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4644),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 49,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4650),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4650),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 57,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4785),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4786),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4795),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4796),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4802),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4802),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4807),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4807),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4812),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4813),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 34,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4817),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4818),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 42,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4822),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4822),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 50,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4827),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4827),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 58,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4832),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4832),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4837),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4838),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4844),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4844),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4849),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4849),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4854),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4854),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 35,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4859),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4860),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 43,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4864),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4864),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 51,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4869),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4870),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 59,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4874),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4875),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4880),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4880),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4885),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4885),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4890),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4890),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4895),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4895),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 36,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4900),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4900),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 44,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4905),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4906),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 52,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4910),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4911),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 60,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4915),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4916),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4992),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(4993),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5007),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5007),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5012),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5012),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5017),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5017),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 37,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5022),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5023),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 45,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5027),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5028),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 53,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5032),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5033),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 61,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5038),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5038),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5043),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5043),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5048),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5048),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5053),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5053),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5058),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5058),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 38,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5064),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5064),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 46,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5069),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5069),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 54,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5074),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5074),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 62,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5079),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5080),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5084),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5085),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5090),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5090),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5095),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5096),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 31,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5100),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5101),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 39,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5106),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5106),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 47,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5111),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5111),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 55,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5116),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5116),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 63,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5121),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5121),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5126),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5127),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5207),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5208),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5213),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5213),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 32,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5219),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5219),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 40,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5224),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5224),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 48,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5229),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5229),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 56,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5234),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5235),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 64,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5240),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5240),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 65,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5247),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5247),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 73,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5254),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5255),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 81,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5260),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5260),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 89,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5265),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5265),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 97,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5270),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5270),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 66,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5275),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5275),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 74,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5280),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5280),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 82,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5285),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5285),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 90,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5290),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5290),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 98,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5295),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5295),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 67,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5300),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5300),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 75,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5305),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5305),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 83,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5310),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5310),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 91,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5315),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5315),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 99,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5320),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5320),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 68,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5397),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5397),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 76,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5405),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5405),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 84,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5409),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5410),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 92,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5414),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5414),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 100,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5419),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5419),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 69,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5424),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5424),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 77,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5429),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5429),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 85,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5434),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5434),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 93,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5439),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5439),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 101,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5444),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5444),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 70,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5449),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5449),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 78,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5454),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5454),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 86,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5459),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5460),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 94,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5464),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5465),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 102,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5469),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5470),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 71,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5689),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5690),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 79,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5696),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5696),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 87,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5701),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5701),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 95,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5706),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5706),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 103,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5711),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5711),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 72,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5716),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5717),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 80,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5722),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5722),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 88,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5727),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5727),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 96,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5732),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5732),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 104,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5737),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 929, DateTimeKind.Local).AddTicks(5737),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        });
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("isDeactive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4"),
                            Description = "Customer",
                            Name = "Customer",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            Description = "IT Staff",
                            Name = "IT",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            Description = "Sale",
                            Name = "Sale",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            Description = "Manager",
                            Name = "Manager",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            Description = "Admin",
                            Name = "Admin",
                            isDeactive = false
                        });
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DNS")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6517),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6517),
                            Description = "Thuê Chỗ",
                            IsDeleted = false,
                            Name = "Thuê Chỗ"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6534),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6534),
                            Description = "Thêm 1U",
                            IsDeleted = false,
                            Name = "Thêm 1U"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6546),
                            DateUpdated = new DateTime(2023, 10, 16, 21, 54, 35, 588, DateTimeKind.Local).AddTicks(6547),
                            Description = "Công suất 100",
                            IsDeleted = false,
                            Name = "Công suất 100"
                        });
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<int>("CurrenNoticeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            AccessFailedCount = 0,
                            Address = "Address2",
                            ConcurrencyStamp = "62ba14d9-d0ae-47f6-b126-4bbdc9c7da4b",
                            CurrenNoticeCount = 0,
                            Email = "it@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname2",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "it@gmail.com",
                            NormalizedUserName = "it",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ8Vcbh0EyIVwU44U4Qtg8PK1mespfA9BGYEEM2riVAz5rev/d9Nu1OnnBlikDTwug==",
                            PhoneNumber = "0000000002",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "it"
                        },
                        new
                        {
                            Id = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            AccessFailedCount = 0,
                            Address = "Address3",
                            ConcurrencyStamp = "5a373d9b-349d-4f4c-8619-0d03017d776c",
                            CurrenNoticeCount = 0,
                            Email = "sale@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname3",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "sale@gmail.com",
                            NormalizedUserName = "sale",
                            PasswordHash = "AQAAAAIAAYagAAAAEM5K75p5D2QHrW5hAIuXP3St1Eb5hGbhuFN+I6dkxverN20vTU3vD+GprM/btnxBdg==",
                            PhoneNumber = "0000000003",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "sale"
                        },
                        new
                        {
                            Id = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            AccessFailedCount = 0,
                            Address = "Address4",
                            ConcurrencyStamp = "e794fb2a-680b-4288-b4f9-13cc6606cb13",
                            CurrenNoticeCount = 0,
                            Email = "manager@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname4",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "manager@gmail.com",
                            NormalizedUserName = "manager",
                            PasswordHash = "AQAAAAIAAYagAAAAEA1kg08vfrS8coN+Gh6Q29sGK/a/OHy9sACB3G/rUqaSlL1v0Yefu9JPEV/AVIqZ3w==",
                            PhoneNumber = "0000000004",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "manager"
                        },
                        new
                        {
                            Id = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            AccessFailedCount = 0,
                            Address = "Address5",
                            ConcurrencyStamp = "202ccf26-07c3-406f-9c9a-7ccb457f082d",
                            CurrenNoticeCount = 0,
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname5",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEMyX+FfZmJad5+h/ZtSmwVtLpF3WNqJlZCbYUV1dPf95PTuoZXsmFj7hTIP01nzg8A==",
                            PhoneNumber = "0000000005",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            RoleId = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1")
                        },
                        new
                        {
                            UserId = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            RoleId = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd")
                        },
                        new
                        {
                            UserId = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            RoleId = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba")
                        },
                        new
                        {
                            UserId = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            RoleId = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.HasOne("Data.Entities.Colocation", "Colocation")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ColocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Service", "Service")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colocation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.HasOne("Data.Entities.Customer", "Customer")
                        .WithMany("Colocations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");

                    b.Navigation("Customer");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.HasOne("Data.Entities.CompanyType", "CompanyType")
                        .WithMany("Customer")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithMany("Locations")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Rack", "Rack")
                        .WithMany("Locations")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.HasOne("Data.Entities.Area", "Area")
                        .WithMany("Racks")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithOne("Server")
                        .HasForeignKey("Data.Entities.Server", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.HasOne("Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Navigation("Colocations");
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
