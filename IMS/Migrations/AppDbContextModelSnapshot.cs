// <auto-generated />
using System;
using Data.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColocationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7681),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7681),
                            IsDeleted = false,
                            Name = "A",
                            RowCount = 8
                        },
                        new
                        {
                            Id = 2,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7690),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7690),
                            IsDeleted = false,
                            Name = "B",
                            RowCount = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAllocate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateStop")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExpectedSize")
                        .HasColumnType("integer");

                    b.Property<string>("InspectorNote")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("ServerId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServerId");

                    b.ToTable("Colocations");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9482),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9493),
                            Description = "Doanh nghiệp tư nhân",
                            IsDeleted = false,
                            Name = "Doanh nghiệp tư nhân"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9535),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9535),
                            Description = "Công ty trách nhiệm hữu hạn một thành viên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn một thành viên"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9548),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9549),
                            Description = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9560),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9560),
                            Description = "Công ty cổ phần",
                            IsDeleted = false,
                            Name = "Công ty cổ phần"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9570),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9571),
                            Description = "Công ty hợp danh",
                            IsDeleted = false,
                            Name = "Công ty hợp danh"
                        });
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "super",
                            CompanyTypeId = 1,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7585),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7589),
                            IsDeleted = false,
                            TaxNumber = "0000000000",
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824")
                        });
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BasePower")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfPort")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePower = 200,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7656),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7656),
                            IsDeleted = false,
                            NumberOfPort = 3,
                            Size = 2,
                            Status = 1,
                            Type = "Mock"
                        });
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoveout")
                        .HasColumnType("boolean");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.Property<int>("StartPosition")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RackId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(8452),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(8453),
                            DeviceId = 1,
                            IsDeleted = false,
                            IsMoveout = false,
                            RackId = 1,
                            StartPosition = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<double>("CurrentPower")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaxPower")
                        .HasColumnType("double precision");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Racks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 200.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7713),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7713),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7737),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7738),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7745),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7745),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7752),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7753),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7856),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7856),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7865),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7865),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7872),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7872),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7878),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7879),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7729),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7729),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7739),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7739),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7746),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7747),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7753),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7754),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7858),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7859),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7866),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7866),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7872),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7873),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7879),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7879),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7730),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7730),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7740),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7740),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7747),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7748),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7754),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7754),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7859),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7860),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7867),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7867),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7873),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7874),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7880),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7880),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7731),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7731),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7741),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7741),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7748),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7748),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7755),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7755),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7860),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7861),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7867),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7868),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 31,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7874),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7874),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 32,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7881),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7881),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 33,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7732),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7732),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 34,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7742),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7742),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 35,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7749),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7749),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 36,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7756),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7756),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 37,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7861),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7861),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 38,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7868),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7868),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 39,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7875),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7875),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 40,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7882),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7882),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 41,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7734),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7734),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 42,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7742),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7743),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 43,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7750),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7750),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 44,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7757),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7757),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 45,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7862),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7862),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 46,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7869),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7869),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 47,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7876),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7876),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 48,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7882),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7883),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 49,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7735),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7735),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 50,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7743),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7744),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 51,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7751),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7751),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 52,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7757),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7758),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 53,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7863),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7863),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 54,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7870),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7870),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 55,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7877),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7877),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 56,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7883),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7884),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 57,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7736),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7737),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 58,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7744),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7744),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 59,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7751),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7752),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 60,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7854),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7854),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 61,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7864),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7864),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 62,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7871),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7871),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 63,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7877),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7878),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 64,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7884),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7884),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 65,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7886),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7886),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 66,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7892),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7892),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 67,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7896),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7896),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 68,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7900),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7901),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 69,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7905),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7905),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 70,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7909),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7909),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 71,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7913),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7914),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 72,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7918),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7918),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 73,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7888),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7888),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 74,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7892),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7893),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 75,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7897),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7897),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 76,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7901),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7902),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 77,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7906),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7906),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 78,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7910),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7910),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 79,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7914),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7914),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 80,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7918),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7919),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 81,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7889),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7889),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 82,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7893),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7894),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 83,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7898),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7898),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 84,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7902),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7903),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 85,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7906),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7907),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 86,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7911),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7911),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 87,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7915),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7915),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 88,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7919),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7919),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 89,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7890),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7890),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 90,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7894),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7895),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 91,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7899),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7899),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 92,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7903),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7903),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 93,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7907),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7908),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 94,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7911),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7912),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 95,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7916),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7916),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 96,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7920),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7920),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 97,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7891),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7891),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 98,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7895),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7895),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 99,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7900),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7900),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 100,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7904),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7904),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 101,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7908),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7908),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 102,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7912),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7913),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 103,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7917),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7917),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 104,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7921),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 424, DateTimeKind.Local).AddTicks(7921),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        });
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("isDeactive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            Description = "Customer",
                            Name = "Customer",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            Description = "IT Staff",
                            Name = "Tech",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            Description = "Sale",
                            Name = "Sale",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            Description = "Manager",
                            Name = "Manager",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("285135ab-c67d-4285-b689-7e88e7f610f9"),
                            Description = "Admin",
                            Name = "Admin",
                            isDeactive = false
                        });
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9599),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9599),
                            Description = "Thuê Chỗ",
                            IsDeleted = false,
                            Name = "Thuê Chỗ"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9661),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9661),
                            Description = "Thêm 1U",
                            IsDeleted = false,
                            Name = "Thêm 1U"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9675),
                            DateUpdated = new DateTime(2023, 10, 20, 11, 38, 52, 65, DateTimeKind.Local).AddTicks(9675),
                            Description = "Công suất 100",
                            IsDeleted = false,
                            Name = "Công suất 100"
                        });
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<int>("CurrenNoticeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            AccessFailedCount = 0,
                            Address = "Address1",
                            ConcurrencyStamp = "57751ee0-13d8-47f7-a5c4-ac0acdadb793",
                            CurrenNoticeCount = 0,
                            Email = "super@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname1",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "super@gmail.com",
                            NormalizedUserName = "super",
                            PasswordHash = "AQAAAAIAAYagAAAAEAj+Pnu08gQNzhqb7HdEz8FvN3f/JosCv7HiqKDt+CLmkSdyzBfb5S1HSysGONqaXg==",
                            PhoneNumber = "0000000001",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "super"
                        },
                        new
                        {
                            Id = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            AccessFailedCount = 0,
                            Address = "Address2",
                            ConcurrencyStamp = "69f477d1-28d8-4d88-8589-2694ace0a12a",
                            CurrenNoticeCount = 0,
                            Email = "tech@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname2",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "tech@gmail.com",
                            NormalizedUserName = "tech",
                            PasswordHash = "AQAAAAIAAYagAAAAENO3DQblKfRaN9Ii1ONtRTesdic0SeQPPMgFfLdBSR0jVHBR5I6h+0gK9CtotPwq9w==",
                            PhoneNumber = "0000000002",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "tech"
                        },
                        new
                        {
                            Id = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            AccessFailedCount = 0,
                            Address = "Address3",
                            ConcurrencyStamp = "adee62ba-4d65-406f-b924-d111012d883e",
                            CurrenNoticeCount = 0,
                            Email = "sale@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname3",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "sale@gmail.com",
                            NormalizedUserName = "sale",
                            PasswordHash = "AQAAAAIAAYagAAAAEIiA0yGn2i0bxYxF+T8jbz4GswzTgB0roVaGcx6u/Qz+wtoj4mkLH7o+Pmm5t36BJw==",
                            PhoneNumber = "0000000003",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "sale"
                        },
                        new
                        {
                            Id = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            AccessFailedCount = 0,
                            Address = "Address4",
                            ConcurrencyStamp = "3e934a58-7c47-47e6-9231-84ea341e858d",
                            CurrenNoticeCount = 0,
                            Email = "manager@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname4",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "manager@gmail.com",
                            NormalizedUserName = "manager",
                            PasswordHash = "AQAAAAIAAYagAAAAEGgLuXdO0mnjnoYYwKk0yxyeG+6Sy1+lDftQJgabkAGKn12JQykXY0RaPASSOA3cBA==",
                            PhoneNumber = "0000000004",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "manager"
                        },
                        new
                        {
                            Id = new Guid("285135ab-c67d-4285-b689-7e88e7f610f9"),
                            AccessFailedCount = 0,
                            Address = "Address5",
                            ConcurrencyStamp = "9926c551-4e3e-4be2-bdc9-f539f34fd744",
                            CurrenNoticeCount = 0,
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname5",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEGhiK1KbQbUYCkD//rbTBY5CuU7qBr7w7Jtfkbi9Ktdzr5cW8ihlcaIL+h8k9iB/bg==",
                            PhoneNumber = "0000000005",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("1abb6e28-793d-460f-8a24-745998356da8")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("285135ab-c67d-4285-b689-7e88e7f610f9")
                        },
                        new
                        {
                            UserId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            RoleId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab")
                        },
                        new
                        {
                            UserId = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            RoleId = new Guid("1abb6e28-793d-460f-8a24-745998356da8")
                        },
                        new
                        {
                            UserId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            RoleId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45")
                        },
                        new
                        {
                            UserId = new Guid("285135ab-c67d-4285-b689-7e88e7f610f9"),
                            RoleId = new Guid("285135ab-c67d-4285-b689-7e88e7f610f9")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.HasOne("Data.Entities.Colocation", "Colocation")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ColocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Service", "Service")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colocation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.HasOne("Data.Entities.Customer", "Customer")
                        .WithMany("Colocations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");

                    b.Navigation("Customer");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.HasOne("Data.Entities.CompanyType", "CompanyType")
                        .WithMany("Customer")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithMany("Locations")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Rack", "Rack")
                        .WithMany("Locations")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.HasOne("Data.Entities.Area", "Area")
                        .WithMany("Racks")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithOne("Server")
                        .HasForeignKey("Data.Entities.Server", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.HasOne("Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Navigation("Colocations");
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
