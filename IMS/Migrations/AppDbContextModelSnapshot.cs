// <auto-generated />
using System;
using Data.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6623),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6633),
                            Description = "Doanh nghiệp tư nhân",
                            IsDeleted = false,
                            Name = "Doanh nghiệp tư nhân"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6745),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6746),
                            Description = "Công ty trách nhiệm hữu hạn một thành viên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn một thành viên"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6764),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6764),
                            Description = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6821),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6821),
                            Description = "Công ty cổ phần",
                            IsDeleted = false,
                            Name = "Công ty cổ phần"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6836),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6837),
                            Description = "Công ty hợp danh",
                            IsDeleted = false,
                            Name = "Công ty hợp danh"
                        });
                });

            modelBuilder.Entity("Data.Entities.ComponentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateInstalled")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUninstalled")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("HardwareCategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HardwareCategoryId");

                    b.HasIndex("RequestId");

                    b.ToTable("ComponentAssignments");
                });

            modelBuilder.Entity("Data.Entities.ComponentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ComponentCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6856),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6863),
                            IsDeleted = false,
                            Name = "CPU"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6885),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6885),
                            IsDeleted = false,
                            Name = "GPU"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6895),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6896),
                            IsDeleted = false,
                            Name = "RAM"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6905),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6905),
                            IsDeleted = false,
                            Name = "OS"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6915),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6915),
                            IsDeleted = false,
                            Name = "ROM"
                        });
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("TaxNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data.Entities.Ip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("integer");

                    b.Property<bool>("Blocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("boolean");

                    b.Property<int>("NetworkId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.ToTable("Ips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = 1,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6966),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6966),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 2,
                            Address = 2,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6984),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6984),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = 3,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6994),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6994),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = 4,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7003),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7003),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = 5,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7012),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7012),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 6,
                            Address = 6,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7040),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7040),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = 7,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7050),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7050),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 8,
                            Address = 8,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7059),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7060),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = 9,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7068),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7069),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 10,
                            Address = 10,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7078),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7079),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = 11,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7087),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7088),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 12,
                            Address = 12,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7096),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7097),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = 13,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7105),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7106),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 14,
                            Address = 14,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7114),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7115),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = 15,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7124),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7124),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 16,
                            Address = 16,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7133),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7133),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = 17,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7173),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7173),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 18,
                            Address = 18,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7185),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7185),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = 19,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7193),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7194),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 20,
                            Address = 20,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7202),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7203),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = 21,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7211),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7211),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 22,
                            Address = 22,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7219),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7220),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = 23,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7228),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7228),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 24,
                            Address = 24,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7237),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7238),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = 25,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7246),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7246),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 26,
                            Address = 26,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7255),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7255),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = 27,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7264),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7264),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 28,
                            Address = 28,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7272),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7272),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = 29,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7280),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7281),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 30,
                            Address = 30,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7289),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7289),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = 31,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7297),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7298),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 32,
                            Address = 32,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7306),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7307),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = 33,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7315),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7315),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 34,
                            Address = 34,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7325),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7325),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = 35,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7334),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7334),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 36,
                            Address = 36,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7343),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7343),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = 37,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7351),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7352),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 38,
                            Address = 38,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7360),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7360),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = 39,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7369),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7369),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 40,
                            Address = 40,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7377),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7378),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = 41,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7386),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7386),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 42,
                            Address = 42,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7451),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7452),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = 43,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7464),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7464),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 44,
                            Address = 44,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7473),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7474),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 45,
                            Address = 45,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7482),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7483),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 46,
                            Address = 46,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7491),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7491),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 47,
                            Address = 47,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7500),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7500),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 48,
                            Address = 48,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7509),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7509),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 49,
                            Address = 49,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7518),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7518),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 50,
                            Address = 50,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7527),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7527),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 51,
                            Address = 51,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7536),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7536),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 52,
                            Address = 52,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7545),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7545),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 53,
                            Address = 53,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7553),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7554),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 54,
                            Address = 54,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7562),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7562),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 55,
                            Address = 55,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7571),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7571),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 56,
                            Address = 56,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7579),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7580),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 57,
                            Address = 57,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7588),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7588),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 58,
                            Address = 58,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7596),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7597),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 59,
                            Address = 59,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7606),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7606),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 60,
                            Address = 60,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7614),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7615),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 61,
                            Address = 61,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7623),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7624),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 62,
                            Address = 62,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7632),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7633),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 63,
                            Address = 63,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7641),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7641),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 64,
                            Address = 64,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7650),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7650),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 65,
                            Address = 65,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7658),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7659),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 66,
                            Address = 66,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7699),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7700),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 67,
                            Address = 67,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7710),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7710),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 68,
                            Address = 68,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7718),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7719),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 69,
                            Address = 69,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7728),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7728),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 70,
                            Address = 70,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7737),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7737),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 71,
                            Address = 71,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7746),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7746),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 72,
                            Address = 72,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7755),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7755),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 73,
                            Address = 73,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7764),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7764),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 74,
                            Address = 74,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7772),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7773),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 75,
                            Address = 75,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7781),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 76,
                            Address = 76,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7790),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7790),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 77,
                            Address = 77,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7798),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7799),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 78,
                            Address = 78,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7807),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7808),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 79,
                            Address = 79,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7816),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7817),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 80,
                            Address = 80,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7825),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7825),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 81,
                            Address = 81,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7833),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7834),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 82,
                            Address = 82,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7842),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7843),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 83,
                            Address = 83,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7851),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7851),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 84,
                            Address = 84,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7860),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7860),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 85,
                            Address = 85,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7868),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7869),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 86,
                            Address = 86,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7877),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7877),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 87,
                            Address = 87,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7886),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7886),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 88,
                            Address = 88,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7894),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7895),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 89,
                            Address = 89,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7903),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7903),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 90,
                            Address = 90,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7912),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7912),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 91,
                            Address = 91,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7920),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7921),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 92,
                            Address = 92,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7929),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7929),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 93,
                            Address = 93,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7938),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7938),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 94,
                            Address = 94,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7980),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7981),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 95,
                            Address = 95,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7991),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(7992),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 96,
                            Address = 96,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8000),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8001),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 97,
                            Address = 97,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8009),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8010),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 98,
                            Address = 98,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8018),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8019),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 99,
                            Address = 99,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8027),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8028),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 100,
                            Address = 100,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8036),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8036),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 101,
                            Address = 101,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8045),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8046),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 102,
                            Address = 102,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8057),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8058),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 103,
                            Address = 103,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8067),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8067),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 104,
                            Address = 104,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8076),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8076),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 105,
                            Address = 105,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8085),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8085),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 106,
                            Address = 106,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8093),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8093),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 107,
                            Address = 107,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8102),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8102),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 108,
                            Address = 108,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8110),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8111),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 109,
                            Address = 109,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8119),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8119),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 110,
                            Address = 110,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8128),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8128),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 111,
                            Address = 111,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8136),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8136),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 112,
                            Address = 112,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8145),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8145),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 113,
                            Address = 113,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8153),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8154),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 114,
                            Address = 114,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8162),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8162),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 115,
                            Address = 115,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8171),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8171),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 116,
                            Address = 116,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8179),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8180),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 117,
                            Address = 117,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8188),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8189),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 118,
                            Address = 118,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8197),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8197),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 119,
                            Address = 119,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8206),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8206),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 120,
                            Address = 120,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8214),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8215),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 121,
                            Address = 121,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8256),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8257),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 122,
                            Address = 122,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8267),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8267),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 123,
                            Address = 123,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8275),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8276),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 124,
                            Address = 124,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8284),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8285),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 125,
                            Address = 125,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8293),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8293),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 126,
                            Address = 126,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8302),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8302),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 127,
                            Address = 127,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8310),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8310),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 128,
                            Address = 128,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8319),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8320),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 129,
                            Address = 129,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8328),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8329),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 130,
                            Address = 130,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8339),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8339),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 131,
                            Address = 131,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8349),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8349),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 132,
                            Address = 132,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8358),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8358),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 133,
                            Address = 133,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8366),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8367),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 134,
                            Address = 134,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8375),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8376),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 135,
                            Address = 135,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8384),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8384),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 136,
                            Address = 136,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8393),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8394),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 137,
                            Address = 137,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8402),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8402),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 138,
                            Address = 138,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8411),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8411),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 139,
                            Address = 139,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8419),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8420),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 140,
                            Address = 140,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8428),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8428),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 141,
                            Address = 141,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8436),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8437),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 142,
                            Address = 142,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8477),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8477),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 143,
                            Address = 143,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8488),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8488),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 144,
                            Address = 144,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8497),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8497),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 145,
                            Address = 145,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8505),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8506),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 146,
                            Address = 146,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8515),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8515),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 147,
                            Address = 147,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8523),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8524),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 148,
                            Address = 148,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8532),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8532),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 149,
                            Address = 149,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8541),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8541),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 150,
                            Address = 150,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8549),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8550),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 151,
                            Address = 151,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8558),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8558),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 152,
                            Address = 152,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8567),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8567),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 153,
                            Address = 153,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8575),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8575),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 154,
                            Address = 154,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8677),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8677),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 155,
                            Address = 155,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8687),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8687),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 156,
                            Address = 156,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8696),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8696),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 157,
                            Address = 157,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8704),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8705),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 158,
                            Address = 158,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8713),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8714),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 159,
                            Address = 159,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8722),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8722),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 160,
                            Address = 160,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8730),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8731),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 161,
                            Address = 161,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8739),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8740),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 162,
                            Address = 162,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8748),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8748),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 163,
                            Address = 163,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8756),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8757),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 164,
                            Address = 164,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8765),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8765),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 165,
                            Address = 165,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8773),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8774),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 166,
                            Address = 166,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8782),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8783),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 167,
                            Address = 167,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8791),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8791),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 168,
                            Address = 168,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8800),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8800),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 169,
                            Address = 169,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8808),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8809),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 170,
                            Address = 170,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8855),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8855),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 171,
                            Address = 171,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8865),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8865),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 172,
                            Address = 172,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8873),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8874),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 173,
                            Address = 173,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8882),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8882),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 174,
                            Address = 174,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8891),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8891),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 175,
                            Address = 175,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8900),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8900),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 176,
                            Address = 176,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8909),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8909),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 177,
                            Address = 177,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8917),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8918),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 178,
                            Address = 178,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8926),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8927),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 179,
                            Address = 179,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8935),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8935),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 180,
                            Address = 180,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8943),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8944),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 181,
                            Address = 181,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8952),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8952),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 182,
                            Address = 182,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8961),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8961),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 183,
                            Address = 183,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8969),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8970),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 184,
                            Address = 184,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8978),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8978),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 185,
                            Address = 185,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8987),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8987),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 186,
                            Address = 186,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8995),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(8996),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 187,
                            Address = 187,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9004),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9005),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 188,
                            Address = 188,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9013),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9013),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 189,
                            Address = 189,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9022),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9022),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 190,
                            Address = 190,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9031),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9031),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 191,
                            Address = 191,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9040),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9040),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 192,
                            Address = 192,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9048),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9049),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 193,
                            Address = 193,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9057),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9057),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 194,
                            Address = 194,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9066),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9066),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 195,
                            Address = 195,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9074),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9074),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 196,
                            Address = 196,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9082),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9083),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 197,
                            Address = 197,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9121),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9122),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 198,
                            Address = 198,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9131),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9132),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        },
                        new
                        {
                            Id = 199,
                            Address = 199,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9140),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9141),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 2
                        },
                        new
                        {
                            Id = 200,
                            Address = 200,
                            Blocked = false,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9149),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(9150),
                            IsDeleted = false,
                            IsReserved = false,
                            NetworkId = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.IpAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAssign")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateUnassign")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IpId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IpId");

                    b.HasIndex("RequestId");

                    b.ToTable("IpAssignments");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RackId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Data.Entities.LocationAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("RequestId");

                    b.ToTable("LocationAssignments");
                });

            modelBuilder.Entity("Data.Entities.Network", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FirstOctet")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("SecondOctet")
                        .HasColumnType("integer");

                    b.Property<int>("SubnetMask")
                        .HasColumnType("integer");

                    b.Property<int>("ThirdOctet")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Networks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6934),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6934),
                            FirstOctet = 192,
                            IsDeleted = false,
                            SecondOctet = 112,
                            SubnetMask = 24,
                            ThirdOctet = 121
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6949),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 38, 731, DateTimeKind.Local).AddTicks(6950),
                            FirstOctet = 193,
                            IsDeleted = false,
                            SecondOctet = 122,
                            SubnetMask = 25,
                            ThirdOctet = 111
                        });
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExpectedSize")
                        .HasColumnType("integer");

                    b.Property<string>("InspectionRecordFilePath")
                        .HasColumnType("text");

                    b.Property<string>("InspectorNote")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("ReceiptOfRecipientFilePath")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<double>("CurrentPower")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaxPower")
                        .HasColumnType("double precision");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("Data.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InspectionRecordFilePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelegated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("isDeactive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            Description = "IT Staff",
                            Name = "Tech",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            Description = "Sale",
                            Name = "Sale",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            Description = "Manager",
                            Name = "Manager",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            Description = "Admin",
                            Name = "Admin",
                            isDeactive = false
                        });
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7346),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7358),
                            IsDeleted = false,
                            Name = "Location",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7395),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7396),
                            IsDeleted = false,
                            Name = "Expand",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7403),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7404),
                            IsDeleted = false,
                            Name = "Ip",
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7411),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7411),
                            IsDeleted = false,
                            Name = "MasterIp",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7419),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7420),
                            IsDeleted = false,
                            Name = "Port",
                            Type = 4
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7427),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7428),
                            IsDeleted = false,
                            Name = "PortPower",
                            Type = 5
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7435),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7435),
                            IsDeleted = false,
                            Name = "Power",
                            Type = 6
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7445),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7445),
                            IsDeleted = false,
                            Name = "Component",
                            Type = 7
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7455),
                            DateUpdated = new DateTime(2023, 11, 10, 22, 41, 39, 233, DateTimeKind.Local).AddTicks(7455),
                            IsDeleted = false,
                            Name = "Appointment",
                            Type = 8
                        });
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<int>("CurrenNoticeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            AccessFailedCount = 0,
                            Address = "Address1",
                            ConcurrencyStamp = "c2fbe3c0-d3a4-48ba-9097-60aabcf5a0f3",
                            CurrenNoticeCount = 0,
                            Email = "super@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname1",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "super@gmail.com",
                            NormalizedUserName = "super",
                            PasswordHash = "AQAAAAIAAYagAAAAEGoyLqcLgpttRXhrr4S6dLVL5XDOCI54cfeZBIC2h0xmBXnH/o0rJOvHlVeDWclGFA==",
                            PhoneNumber = "0000000001",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "super"
                        },
                        new
                        {
                            Id = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            AccessFailedCount = 0,
                            Address = "Address2",
                            ConcurrencyStamp = "dc443707-cd25-402f-b2d0-bccc54abf8ed",
                            CurrenNoticeCount = 0,
                            Email = "tech@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname2",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "tech@gmail.com",
                            NormalizedUserName = "tech",
                            PasswordHash = "AQAAAAIAAYagAAAAEBu/X6rJuXXeDoDdw8F7/mMkobFzaYg5ODIEHLoEyqo6AEUJbAXHLJwkfg9Bu7Qn5A==",
                            PhoneNumber = "0000000002",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "tech"
                        },
                        new
                        {
                            Id = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            AccessFailedCount = 0,
                            Address = "Address3",
                            ConcurrencyStamp = "7b827341-b700-4f71-883d-47ced985a36e",
                            CurrenNoticeCount = 0,
                            Email = "sale@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname3",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "sale@gmail.com",
                            NormalizedUserName = "sale",
                            PasswordHash = "AQAAAAIAAYagAAAAEEOVeuDGcJVVfBdehYuhNX5xLDE07n4c7em0POv+AUxbYImqpfznrhaQJgJbc5Jt6Q==",
                            PhoneNumber = "0000000003",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "sale"
                        },
                        new
                        {
                            Id = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            AccessFailedCount = 0,
                            Address = "Address4",
                            ConcurrencyStamp = "ac8e8cc8-1469-4874-a90c-e403e7bff659",
                            CurrenNoticeCount = 0,
                            Email = "manager@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname4",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "manager@gmail.com",
                            NormalizedUserName = "manager",
                            PasswordHash = "AQAAAAIAAYagAAAAEIK6kWl8G5/Zqt+BcP4I9fRKsTW65ex1lThoiScc6aJBHCUfoQndaynvVBzuHgcVXw==",
                            PhoneNumber = "0000000004",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "manager"
                        },
                        new
                        {
                            Id = new Guid("01fc684c-d9d0-4fcc-b0a7-56fea6945928"),
                            AccessFailedCount = 0,
                            Address = "Address5",
                            ConcurrencyStamp = "ff79a03f-b234-4b58-90d6-3644e14a07f9",
                            CurrenNoticeCount = 0,
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname5",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAELqk7fNQwQnP5bq4hVDL2KpQkaB34plK0e1N2JaR8HVOR1DNrs4+gUTF8tn1J+x1XA==",
                            PhoneNumber = "0000000005",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("1abb6e28-793d-460f-8a24-745998356da8")
                        },
                        new
                        {
                            UserId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824"),
                            RoleId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45")
                        },
                        new
                        {
                            UserId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab"),
                            RoleId = new Guid("57ffb575-7c79-4133-8433-aebbcd71f824")
                        },
                        new
                        {
                            UserId = new Guid("1abb6e28-793d-460f-8a24-745998356da8"),
                            RoleId = new Guid("4716f673-cef5-4edd-b67d-9c71599b9fab")
                        },
                        new
                        {
                            UserId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45"),
                            RoleId = new Guid("1abb6e28-793d-460f-8a24-745998356da8")
                        },
                        new
                        {
                            UserId = new Guid("01fc684c-d9d0-4fcc-b0a7-56fea6945928"),
                            RoleId = new Guid("2e3566a9-02b1-4ec4-a2d4-b3bb3c4f2b45")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Entities.ComponentAssignment", b =>
                {
                    b.HasOne("Data.Entities.ComponentCategory", "HardwareCategory")
                        .WithMany()
                        .HasForeignKey("HardwareCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Request", "Request")
                        .WithMany("ComponentAssignments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HardwareCategory");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.HasOne("Data.Entities.CompanyType", "CompanyType")
                        .WithMany("Customer")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("Data.Entities.Ip", b =>
                {
                    b.HasOne("Data.Entities.Network", "Network")
                        .WithMany("Ips")
                        .HasForeignKey("NetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Network");
                });

            modelBuilder.Entity("Data.Entities.IpAssignment", b =>
                {
                    b.HasOne("Data.Entities.Ip", "Ip")
                        .WithMany("IpAssignments")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Request", "Request")
                        .WithMany("IpAssignments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ip");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.HasOne("Data.Entities.Rack", "Rack")
                        .WithMany("Locations")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("Data.Entities.LocationAssignment", b =>
                {
                    b.HasOne("Data.Entities.Location", "Location")
                        .WithMany("LocationAssignments")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.HasOne("Data.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.HasOne("Data.Entities.Area", "Area")
                        .WithMany("Racks")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Data.Entities.Request", b =>
                {
                    b.HasOne("Data.Entities.Order", "Order")
                        .WithMany("Requests")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Service", "Service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany("ApprovedServices")
                        .HasForeignKey("UserId");

                    b.HasOne("Data.Entities.User", null)
                        .WithMany("ExecutedServices")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.HasOne("Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Data.Entities.Ip", b =>
                {
                    b.Navigation("IpAssignments");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Navigation("LocationAssignments");
                });

            modelBuilder.Entity("Data.Entities.Network", b =>
                {
                    b.Navigation("Ips");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Data.Entities.Request", b =>
                {
                    b.Navigation("ComponentAssignments");

                    b.Navigation("IpAssignments");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Navigation("ApprovedServices");

                    b.Navigation("ExecutedServices");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
