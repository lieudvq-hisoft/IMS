// <auto-generated />
using System;
using Data.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231020035235_seed_super_user")]
    partial class seed_super_user
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColocationId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RowCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2723),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2723),
                            IsDeleted = false,
                            Name = "A",
                            RowCount = 8
                        },
                        new
                        {
                            Id = 2,
                            ColumnCount = 8,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2732),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2732),
                            IsDeleted = false,
                            Name = "B",
                            RowCount = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAllocate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateStop")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExpectedSize")
                        .HasColumnType("integer");

                    b.Property<string>("InspectorNote")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("ServerId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServerId");

                    b.ToTable("Colocations");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(371),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(382),
                            Description = "Doanh nghiệp tư nhân",
                            IsDeleted = false,
                            Name = "Doanh nghiệp tư nhân"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(447),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(448),
                            Description = "Công ty trách nhiệm hữu hạn một thành viên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn một thành viên"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(465),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(466),
                            Description = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên",
                            IsDeleted = false,
                            Name = "Công ty trách nhiệm hữu hạn từ hai thành viên trở lên"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(481),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(482),
                            Description = "Công ty cổ phần",
                            IsDeleted = false,
                            Name = "Công ty cổ phần"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(497),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(497),
                            Description = "Công ty hợp danh",
                            IsDeleted = false,
                            Name = "Công ty hợp danh"
                        });
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BasePower")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfPort")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePower = 200,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2683),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2687),
                            IsDeleted = false,
                            NumberOfPort = 3,
                            Size = 2,
                            Status = 1,
                            Type = "Mock"
                        });
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoveout")
                        .HasColumnType("boolean");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.Property<int>("StartPosition")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RackId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(3419),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(3419),
                            DeviceId = 1,
                            IsDeleted = false,
                            IsMoveout = false,
                            RackId = 1,
                            StartPosition = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("Column")
                        .HasColumnType("integer");

                    b.Property<double>("CurrentPower")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaxPower")
                        .HasColumnType("double precision");

                    b.Property<int>("Row")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Racks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 200.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2754),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2754),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2774),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2775),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2783),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2783),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2791),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2791),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2798),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2798),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2805),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2806),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2812),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2813),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2819),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2820),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2766),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2766),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2776),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2776),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2784),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2784),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2792),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2792),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2799),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2800),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2806),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2807),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2813),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2814),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2820),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2821),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2767),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2768),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2777),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2777),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2785),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2785),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2793),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2793),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2800),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2800),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2807),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2807),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2814),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2814),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2855),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2855),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2768),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2769),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2778),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2778),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2786),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2786),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2794),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2794),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2801),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2801),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2808),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2808),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 31,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2815),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2815),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 32,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2856),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2856),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 33,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2769),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2770),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 34,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2779),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2779),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 35,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2787),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2787),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 36,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2794),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2795),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 37,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2802),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2802),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 38,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2809),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2809),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 39,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2816),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2816),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 40,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2857),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2857),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 41,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2771),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2772),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 42,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2780),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2780),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 43,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2788),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2788),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 44,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2795),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2796),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 45,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2803),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2803),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 46,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2810),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2810),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 47,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2817),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2817),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 48,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2858),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2858),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 6,
                            Size = 42
                        },
                        new
                        {
                            Id = 49,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2772),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2773),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 50,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2781),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2781),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 51,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2789),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2789),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 52,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2796),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2797),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 53,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2804),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2804),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 54,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2811),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2811),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 55,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2818),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2818),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 56,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2858),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2859),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 7,
                            Size = 42
                        },
                        new
                        {
                            Id = 57,
                            AreaId = 1,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2773),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2774),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 58,
                            AreaId = 1,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2782),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2782),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 59,
                            AreaId = 1,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2790),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2790),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 60,
                            AreaId = 1,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2797),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2797),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 61,
                            AreaId = 1,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2804),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2805),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 62,
                            AreaId = 1,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2811),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2812),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 63,
                            AreaId = 1,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2818),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 64,
                            AreaId = 1,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2859),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2860),
                            IsDeleted = false,
                            MaxPower = 3000.0,
                            Row = 8,
                            Size = 42
                        },
                        new
                        {
                            Id = 65,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2861),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2861),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 66,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2867),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2867),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 67,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2871),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2871),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 68,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2875),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2876),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 69,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2879),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2880),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 70,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2884),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2884),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 71,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2888),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2888),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 72,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2892),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2893),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 1,
                            Size = 42
                        },
                        new
                        {
                            Id = 73,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2863),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2863),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 74,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2867),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2868),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 75,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2872),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2872),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 76,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2876),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2876),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 77,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2880),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2881),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 78,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2885),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2885),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 79,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2889),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2889),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 80,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2893),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2893),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 2,
                            Size = 42
                        },
                        new
                        {
                            Id = 81,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2864),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2864),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 82,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2868),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2869),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 83,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2873),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2873),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 84,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2877),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2877),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 85,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2881),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2881),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 86,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2885),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2886),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 87,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2890),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2890),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 88,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2894),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2894),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 3,
                            Size = 42
                        },
                        new
                        {
                            Id = 89,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2865),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2865),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 90,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2869),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2869),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 91,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2873),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2874),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 92,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2878),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2878),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 93,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2882),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2882),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 94,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2886),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2886),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 95,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2891),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2891),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 96,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2895),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2895),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 4,
                            Size = 42
                        },
                        new
                        {
                            Id = 97,
                            AreaId = 2,
                            Column = 1,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2866),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2866),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 98,
                            AreaId = 2,
                            Column = 2,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2870),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2870),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 99,
                            AreaId = 2,
                            Column = 3,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2874),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2875),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 100,
                            AreaId = 2,
                            Column = 4,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2879),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2879),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 101,
                            AreaId = 2,
                            Column = 5,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2883),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2883),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 102,
                            AreaId = 2,
                            Column = 6,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2887),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2887),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 103,
                            AreaId = 2,
                            Column = 7,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2891),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2892),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        },
                        new
                        {
                            Id = 104,
                            AreaId = 2,
                            Column = 8,
                            CurrentPower = 0.0,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2896),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 35, 279, DateTimeKind.Local).AddTicks(2896),
                            IsDeleted = false,
                            MaxPower = 3500.0,
                            Row = 5,
                            Size = 42
                        });
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("isDeactive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4"),
                            Description = "Customer",
                            Name = "Customer",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            Description = "IT Staff",
                            Name = "Tech",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            Description = "Sale",
                            Name = "Sale",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            Description = "Manager",
                            Name = "Manager",
                            isDeactive = false
                        },
                        new
                        {
                            Id = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            Description = "Admin",
                            Name = "Admin",
                            isDeactive = false
                        });
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(527),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(527),
                            Description = "Thuê Chỗ",
                            IsDeleted = false,
                            Name = "Thuê Chỗ"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(548),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(549),
                            Description = "Thêm 1U",
                            IsDeleted = false,
                            Name = "Thêm 1U"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(565),
                            DateUpdated = new DateTime(2023, 10, 20, 10, 52, 34, 880, DateTimeKind.Local).AddTicks(565),
                            Description = "Công suất 100",
                            IsDeleted = false,
                            Name = "Công suất 100"
                        });
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<int>("CurrenNoticeCount")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4"),
                            AccessFailedCount = 0,
                            Address = "Address1",
                            ConcurrencyStamp = "91e08197-7a1f-4150-8fcd-0ab578a0c561",
                            CurrenNoticeCount = 0,
                            Email = "super@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname1",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "super@gmail.com",
                            NormalizedUserName = "super",
                            PasswordHash = "AQAAAAIAAYagAAAAEHPr6BGXszRLHACJeZ2l3SPDyVXKN2i7/O3qfvMm3CBOHD39YXlab/j0titkKPNnrw==",
                            PhoneNumber = "0000000001",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "super"
                        },
                        new
                        {
                            Id = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            AccessFailedCount = 0,
                            Address = "Address2",
                            ConcurrencyStamp = "6d393ecc-0d69-4518-8c74-6fd365973ba7",
                            CurrenNoticeCount = 0,
                            Email = "tech@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname2",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "tech@gmail.com",
                            NormalizedUserName = "tech",
                            PasswordHash = "AQAAAAIAAYagAAAAEP+Bu05kNeyt9Q0sLjFQoWajpuHAzrYIG9hVKex2hBR/iVOeqeBbz0mVGFdnMorCTA==",
                            PhoneNumber = "0000000002",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "tech"
                        },
                        new
                        {
                            Id = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            AccessFailedCount = 0,
                            Address = "Address3",
                            ConcurrencyStamp = "2df02a47-e12d-42ac-8fc4-75192a0a71df",
                            CurrenNoticeCount = 0,
                            Email = "sale@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname3",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "sale@gmail.com",
                            NormalizedUserName = "sale",
                            PasswordHash = "AQAAAAIAAYagAAAAEE3aWh5cif7QzxZ/+jHl6J89qtgt8CZkh9PTRPLV3BHmyxu3J+xVQi53zY1a+RGZJQ==",
                            PhoneNumber = "0000000003",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "sale"
                        },
                        new
                        {
                            Id = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            AccessFailedCount = 0,
                            Address = "Address4",
                            ConcurrencyStamp = "0ed9f441-5319-4897-aae3-3b529d7c8f4b",
                            CurrenNoticeCount = 0,
                            Email = "manager@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname4",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "manager@gmail.com",
                            NormalizedUserName = "manager",
                            PasswordHash = "AQAAAAIAAYagAAAAELGx/04U+M3umRPFH+x6FekrWTR5Ki4VQFEDBJtXqCxfjohXWhhJ9ZAKfmavIRB+OQ==",
                            PhoneNumber = "0000000004",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "manager"
                        },
                        new
                        {
                            Id = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            AccessFailedCount = 0,
                            Address = "Address5",
                            ConcurrencyStamp = "3079d340-e8bf-48ff-b346-ec0e95a6a7d4",
                            CurrenNoticeCount = 0,
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            Fullname = "Fullname5",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAENO3JLY1JPCc6v1iO7RsgXQY7aAYzBVksqNt6FDrk0Ar2CGr4quIZg8bW4Tb8xW42A==",
                            PhoneNumber = "0000000005",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4"),
                            RoleId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4")
                        },
                        new
                        {
                            UserId = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            RoleId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4")
                        },
                        new
                        {
                            UserId = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            RoleId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4")
                        },
                        new
                        {
                            UserId = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            RoleId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4")
                        },
                        new
                        {
                            UserId = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            RoleId = new Guid("8286d046-9740-a3e4-95cf-ff46699c73c4")
                        },
                        new
                        {
                            UserId = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1"),
                            RoleId = new Guid("95c69371-b924-6fe3-7c38-98b7dd200bc1")
                        },
                        new
                        {
                            UserId = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd"),
                            RoleId = new Guid("a905569d-db07-3ae3-63a0-322750a4a3bd")
                        },
                        new
                        {
                            UserId = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba"),
                            RoleId = new Guid("bc4519c8-fdeb-06e2-4a08-cc98c4273aba")
                        },
                        new
                        {
                            UserId = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7"),
                            RoleId = new Guid("cf85ddf4-1ece-d1e2-3171-650938abd2b7")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Entities.AdditionalService", b =>
                {
                    b.HasOne("Data.Entities.Colocation", "Colocation")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ColocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Service", "Service")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colocation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.HasOne("Data.Entities.Customer", "Customer")
                        .WithMany("Colocations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId");

                    b.Navigation("Customer");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.HasOne("Data.Entities.CompanyType", "CompanyType")
                        .WithMany("Customer")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithMany("Locations")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Rack", "Rack")
                        .WithMany("Locations")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.HasOne("Data.Entities.Area", "Area")
                        .WithMany("Racks")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Data.Entities.Server", b =>
                {
                    b.HasOne("Data.Entities.Device", "Device")
                        .WithOne("Server")
                        .HasForeignKey("Data.Entities.Server", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Data.Entities.UserRole", b =>
                {
                    b.HasOne("Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Area", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("Data.Entities.Colocation", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.CompanyType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Navigation("Colocations");
                });

            modelBuilder.Entity("Data.Entities.Device", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Data.Entities.Rack", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Data.Entities.Service", b =>
                {
                    b.Navigation("AdditionalServices");
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
